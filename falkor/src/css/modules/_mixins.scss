@mixin font($family, $weight: 400, $style: normal) {
  $font-weight: $weight;
  $font-style:  $style;
  $fallbacks: sans-serif;

  @if ($family == 'proxima-nova') {
    $family: 'proxima-nova';
    $fallbacks: Verdana, Arial, sans-serif;
  }
 
  // Translate Weight
  @if ($weight == 100) or ($weight == thin) or ($weight == ultralight) {
    $weight: 1;
  }
  @if ($weight == 200) or ($weight == extralight) {
    $weight: 2;
  }
  @if ($weight == 300) or ($weight == light) {
    $weight: 3;
  }
  @if ($weight == 400) or ($weight == normal) or ($weight == book) {
    $weight: 4;
  }
  @if ($weight == 500) or ($weight == medium) {
    $weight: 5;
  }
  @if ($weight == 600) or ($weight == semibold) or ($weight == demi) {
    $weight: 6;
  }
  @if ($weight == 700) or ($weight == bold) {
    $weight: 7;
  }
  @if ($weight == 800) or ($weight == extrabold) {
    $weight: 8;
  }
  @if ($weight == 900) or ($weight == black) or ($weight == heavy) {
    $weight: 9;
  }
 
  // Translate Style
  @if $style == normal {
    $style: n;
  }
  @else if $style == italic {
    $style: i;
  }
 
  // Assemble $font-family
  $primary-font:   $family + "-" + $style + $weight;
  $secondary-font: $family;

  $font-family:    "#{$primary-font}", "#{$secondary-font}", $fallbacks;
 
  font-family: $font-family;
  font-style:  $font-style;
  font-weight: $font-weight;
}



/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 * 
   `@include font-size(10px);`
 * 
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size, $line-height: true){
    font-size:$font-size;
    font-size:($font-size / $base-font-size)*1rem;

    @if($line-height != false) {
      
      @if($line-height == true) {
        line-height:ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
      }
      @else {
        line-height: $line-height;
      }
    }
}


@mixin text-stroke($width, $color) {
    $width: $width + 0;
    $shadow: 0 0 0 transparent;
    $i: 0;
    $w: 1;

    @while ($i < $width) {
        $i: $i + 1;
        $j: 0;
        $w: $w + 2;

        @for $r from 1 through $w {
            @for $c from 1 through $w {
                $x: $c - ceil($w / 2);
                $y: $r - ceil($w / 2);

                $shadow: #{$shadow}, #{$x}px #{$y}px 0 $color;
            }
        }
    }

    text-shadow: $shadow;
}